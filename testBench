LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
 
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--USE ieee.numeric_std.ALL;
 
ENTITY testBench IS
END testBench;
 
ARCHITECTURE behavior OF testBench IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT program
    PORT(
         clock : IN  std_logic;
         reset : IN  std_logic;
         sensor : IN  std_logic_vector(11 downto 0);
         gate : OUT  std_logic_vector(7 downto 0);
         led : OUT  std_logic;
         buzzer : OUT  std_logic
        );
    END COMPONENT;
    

   --Inputs
   signal clock : std_logic := '0';
   signal reset : std_logic := '0';
   signal sensor : std_logic_vector(11 downto 0) := (others => '0');

 	--Outputs
   signal gate : std_logic_vector(7 downto 0);
   signal led : std_logic;
   signal buzzer : std_logic;

   -- Clock period definitions
   constant clock_period : time := 10 ns;
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: program PORT MAP (
          clock => clock,
          reset => reset,
          sensor => sensor,
          gate => gate,
          led => led,
          buzzer => buzzer
        );

   -- Clock process definitions
   clock_process :process
   begin
		clock <= '0';
		wait for clock_period/2;
		clock <= '1';
		wait for clock_period/2;
   end process;
 

   -- Stimulus process
   stim_proc: process
   begin
		wait for 100 ns;
		
		sensor(0) <= '1';
		sensor(1) <= '1';
		sensor(2) <= '1';
		wait for 10 ns;
		
		sensor(3) <= '1';
		sensor(4) <= '1';
		sensor(5) <= '1';
		wait for 10 ns;
		
		sensor(6) <= '1';
		sensor(7) <= '1';
		sensor(8) <= '1';
		wait for 10 ns;
		
		sensor(9) <= '1';
		sensor(10) <= '1';
		sensor(11) <= '1';
		wait for 10 ns;
		
		sensor(9) <= '0';
		sensor(10) <= '0';
		sensor(11) <= '0';
		wait for 10 ns;
		
		sensor(6) <= '0';
		sensor(7) <= '0';
		sensor(8) <= '0';
		wait for 10 ns;
		
		sensor(3) <= '0';
		sensor(4) <= '0';
		sensor(5) <= '0';
		wait for 10 ns;
		
		sensor(0) <= '0';
		sensor(1) <= '0';
		sensor(2) <= '0';
		wait for 10 ns;
      wait;
   end process;

END;
